
//Генерация двумерного массива
int[,] GenerateMatrix(int rows = 4, int cols = 4, int start = 5, int end = 10)
{
    int[,] array = new int[rows, cols];
    Random random = new Random();
    for (int i = 0; i < array.GetLength(0); i++)
    {
        for (int j = 0; j < array.GetLength(1); j++)
        {
            array[i, j] = random.Next(start, end);
        }
    }

    return array;
}

//Генерация массива
int[] GenerateArray(int countElements = 5, int start = 5, int end = 10)
{
    int[] array = new int[countElements];
    Random random = new Random();
    for (int i = 0; i < array.Length; i++)
    {
        array[i] = random.Next(start, end);
    }

    return array;
}


//Вывод двумерного массива на печать
void PrintMatrix(int[,] array)
{
    for (int i = 0; i < array.GetLength(0); i++)
    {
        for (int j = 0; j < array.GetLength(1); j++)
        {
            Console.Write($"{array[i, j]} ");
        }

        Console.WriteLine();
    }
}


//Вывод массива на печать
void PrintArray(int[] array)
{
    foreach (var item in array)
    {
        Console.Write($"{item} ");
    }

    Console.WriteLine();
}

// Преобразование двумерного массива в одномерный
int[] ChangeArrayToOneRow(int[,] array)
{
    List<int> arrayI = new List<int>();
    for (int i = 0; i < array.GetLength(0); i++)
    {
        for (int j = 0; j < array.GetLength(1); j++)
        {
            arrayI.Add(array[i, j]);
        }
    }

    return arrayI.ToArray();
}

// Удаление дублируюзийся элементов массива через список List
int[] DelDublicateElementsArray(int[] array)
{
    List<int> arrayTemp = new List<int>();

    foreach (int item in array)
    {
        if (!arrayTemp.Contains(item))
        {
            arrayTemp.Add(item);
        }
    }

    int[] arrayNew = arrayTemp.ToArray();
    return arrayNew;
}